// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/ubuntu
{
	"name": "LibreOffice Python UNO Examples",
	"hostRequirements": {
		"cpus": 4
	},
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"dockerComposeFile": "docker-compose.yml",
	"service": "libreoffice_ex",
	"workspaceFolder": "/workspace/libreoffice_ex",
	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [3004, 3005],
	"portsAttributes": {
		"3004": {
			"visibility": "private",
			"label": "LibreOffice http Server"
		},
		"3005": {
			"visibility": "private",
			"label": "LibreOffice https Server"
		},
		"2002": {
			"onAutoForward": "silent",
			"visibility": "private"
		}
	},
	

	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	"remoteUser": "root",
	"mounts": [
		"source=vscode-extensions,target=/root/.vscode-server/extensions,type=volume"
	],
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance",
				"njpwerner.autodocstring",
				"ms-python.black-formatter",
				"ms-vscode.test-adapter-converter",
				"Phu1237.vs-browser",
				"streetsidesoftware.code-spell-checker"
			],
			// Adds VS Code settings.json values into the environment.
			"settings": {
				"terminal.integrated.profiles.linux": {
					"bash": {
						"path": "/bin/bash",
						"args": [
							"-l"
						]
					}
				},
				"vs-browser.url": "http://localhost:3004"
			}
		}
	},
	// Did not work when placed in brackets. Only as string. Brackets need to call /usr/bin/sh -c
	// "initializeCommand": "",
	"postAttachCommand": "nohup bash /defaults/autostart >> /var/log/autostart.log 2>&1",
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "bash /usr/local/bin/startup.sh && nohup bash /defaults/autostart > /var/log/autostart.log 2>&1"

}